<?php
//1.redis常用数据类型
//答：
//字符串String、字典Hash、列表List、集合Set、有序集合SortedSet （HyperLogLog、Geo、Pub/Sub）
 
//2.如果有大量的key需要设置同一时间过期，一般需要注意什么？(雪崩)
//答：
//我们一般需要在时间上加一个随机值，使得过期时间分散一些

//3.缓冲穿透（产生这个问题的原因可能是外部的恶意攻击，例如，对用户信息进行了缓存，但恶意攻击者使用不存在的用户id频繁请求接口，导致查询缓存不命中，然后穿透 DB 查询依然不命中。这时会有大量请求穿透缓存访问到 DB）
//答：
//对不存在的用户，在缓存中保存一个空对象进行标记，防止相同 ID 再次访问 DB。不过有时这个方法并不能很好解决问题，可能导致缓存中存储大量无用数据。
//使用 BloomFilter 过滤器，BloomFilter 的特点是存在性检测，如果 BloomFilter 中不存在，那么数据一定不存在；如果 BloomFilter 中存在，实际数据也有可能会不存在。非常适合解决这类的问题。

//4.Redis分布式锁么，它是什么回事？
//答：
//先拿setnx来争抢锁，抢到之后，再用expire给锁加一个过期时间防止锁忘记了释放。

//5.假如Redis里面有1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如何将它们全部找出来？
//答：
//使用keys指令可以扫出指定模式的key列表（会阻塞，线上建议使用scan迭代key）

//6.使用过Redis做异步队列么？
//答：
//一般使用list结构作为队列，rpush生产消息，lpop消费消息。当lpop没有消息的时候，要适当sleep一会再重试
//如果不实用sleep呢？//list还有个指令叫blpop，在没有消息的时候，它会阻塞住直到消息到来。

//7.能不能生产一次消费多次呢？
//答：
//使用pub/sub主题订阅者模式，可以实现 1:N 的消息队列。

//8. pub/sub(发布订阅)有什么缺点？
//答：
//在消费者下线的情况下，生产的消息会丢失，得使用专业的消息队列如RocketMQ等

//9.redis 延时队列，。
//答：
//使用redis zset 数据结构   2.使用score排序   score为过期时间点   3.启动线程不断取出排序第一个  比较score和当前时间点   如果score小于或等于当前时间  说明此数据过期  需要处理  4.处理完毕在zset中移除

//10.Redis是怎么持久化的？服务主从数据怎么交互的？
//答：
//rdb全量持久化 aof增量持久化 在redis实例重启时，会使用RDB持久化文件重新构建内存，再使用AOF重放近期的操作指令来实现完整恢复重启之前的状态。


//11.对方追问那如果突然机器停电会怎样？
//答：
//取决于AOF日志sync属性的配置，如果不要求性能，在每条写指令时都sync一下磁盘，就不会丢失数据。但是在高性能的要求下每次都sync是不现实的，一般都使用定时sync，比如1s1次，这个时候最多就会丢失1s的数据。

//12.RDB的原理是什么？
//答：
//你给出两个词汇就可以了，fork和cow。fork是指redis通过创建子进程来进行RDB操作，cow指的是copy on write，子进程创建后，与父子进程共享数据段，父进程继续提供读写服务，写脏的页面数据会逐渐和子进程分离开来。

//13.为什么要用pipeline？
//答：
//减少IO。



























